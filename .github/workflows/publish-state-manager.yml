name: Publish State Manager Image

on:
  push:
    branches: [main]
    paths:
      - 'state-manager/**'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:7
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: password
          MONGO_INITDB_DATABASE: test_db

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: state-manager/go.mod

      - name: Run test suite
        working-directory: state-manager
        env:
          MONGO_URI: mongodb://admin:password@localhost:27017
          MONGO_DATABASE_NAME: test_exosphere_state_manager
          STATE_MANAGER_SECRET: test-secret-key
          SECRETS_ENCRYPTION_KEY: YTzpUlBGLSwm-3yKJRJTZnb0_aQuQQHyz64s8qAERVU=
        run: |
          go test -v ./...

  publish:
    runs-on: ubuntu-latest
    needs: test
    if: github.repository == 'exospherehost/exospherehost'

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate tags & labels for both registries
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/exospherehost/exosphere-state-manager
            exospherehost/exosphere-state-manager
          tags: |
            type=raw,value=latest
            type=sha,format=short

      - name: Build and push to both registries
        uses: docker/build-push-action@v5
        with:
          context: ./state-manager
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: true
          sbom: true