name: Publish Landing Page image to GHCR and Deploy to K8s

on:
  push:
    branches: [main]
    paths:
      - 'landing-page/**'
  release:
    types: [published]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/exosphere-landing-page
  SHA_TAG: ${{ github.sha }}

jobs:
  publish-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      json: ${{ steps.meta.outputs.json }}

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate tags & labels
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,format=short
            type=ref,event=tag           # v1.2.3 → v1.2.3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./landing-page
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-to-k8s:
    needs: publish-image
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to K8s
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > kubeconfig.yaml
          export KUBECONFIG=$PWD/kubeconfig.yaml
          kubectl get nodes

          echo "selected image: ${{ fromJson(needs.publish-image.outputs.json).tags[1] }}"

          kubectl set image deployment/exosphere-landing-page exosphere-landing-page=${{ fromJson(needs.publish-image.outputs.json).tags[1] }}

          kubectl rollout status deployment/exosphere-landing-page

          status=$(kubectl rollout status deployment/exosphere-landing-page)

          echo "$status"

          if [[ "$status" != *"successfully rolled out"* ]]; then
            kubectl rollout undo deployment/exosphere-landing-page
            echo "❌ Deployment failed. Rolled back." >&2
            exit 1
          fi
